{"version":3,"sources":["services/contacts.js","App.js","index.js"],"names":["baseURL","axios","get","then","response","data","personObj","post","id","delete","put","SuccessNotif","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","ErrorNotif","People","persons","searchName","onDelete","filtered","filter","person","length","name","match","RegExp","map","key","number","pid","onClick","Form","onSubmit","onNameChange","onNumberChange","onChange","type","Search","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setSearchName","setMessage","error","setError","useEffect","contactsSrv","event","target","value","preventDefault","i","findIndex","p","window","confirm","newObj","concat","setTimeout","catch","status","console","log","e","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e097be2b.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseURL = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseURL)\r\n    return request.then((response) => response.data)\r\n}\r\n\r\nconst create = (personObj) => {\r\n    const request = axios.post(baseURL, personObj)\r\n    return request.then((response) => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    return axios.delete(`${baseURL}/${id}`)\r\n}\r\n\r\nconst update = (id, personObj) => {\r\n    const request = axios.put(`${baseURL}/${id}`, personObj)\r\n    return request.then((response) => response.data)\r\n}\r\n\r\nexport default {getAll, create, remove, update}","import React, { useState, useEffect } from 'react'\nimport contactsSrv from './services/contacts'\n\nconst SuccessNotif = ({message}) => {\n  if (message === null) return null\n\n  const msgStyle = {\n      color: \"green\",\n      background: \"lightgrey\",\n      fontSize: 20,\n      borderStyle: \"solid\",\n      borderRadius: 5,\n      padding: 10,\n      marginBottom: 10\n  }\n\n  return (\n    <div style={msgStyle}>\n      {message}\n    </div>\n  )\n}\n\nconst ErrorNotif = ({message}) => {\n  if (message === null) return null\n\n  const msgStyle = {\n      color: \"red\",\n      background: \"lightgrey\",\n      fontSize: 20,\n      borderStyle: \"solid\",\n      borderRadius: 5,\n      padding: 10,\n      marginBottom: 10\n  }\n\n  return (\n    <div style={msgStyle}>\n      {message}\n    </div>\n  )\n}\n\nconst People = ({persons, searchName, onDelete}) => {\n  const filtered = persons.filter((person) => {\n    return  searchName.length === 0 || \n            person.name.match(new RegExp(`${searchName}+`, \"i\")) !== null\n    })\n\n  return (\n    <div>\n      <h2>Numbers</h2>\n      {filtered.map((person) => \n        <div key={person.name}>\n          {person.name} {person.number} <button pid={person.id} onClick={() => onDelete(person)}>delete</button>\n        </div>)}\n    </div>)\n\n}\n\nconst Form = ({onSubmit, onNameChange, onNumberChange}) => {\n  return (\n    <div>\n      <h2>Add New Entry</h2>\n      <form onSubmit={onSubmit}>\n        <div>\n          name: <input onChange={onNameChange}/>\n        </div>\n        <div>\n          number: <input onChange={onNumberChange}/>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nconst Search = ({onChange}) => {\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      Filter names: <input onChange={onChange}/>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ searchName, setSearchName] = useState('')\n  const [ message, setMessage ] = useState(null)\n  const [ error, setError ] = useState(null)\n\n  useEffect(() => {\n    contactsSrv.getAll().then((response) => setPersons(response))\n  }, [])\n\n  const nameChangeHandler = (event) => setNewName(event.target.value)\n  const numberChangeHandler = (event) => setNewNumber(event.target.value)\n  const searchChangeHandler = (event) => setSearchName(event.target.value)\n\n  const deletePersonHandler = (p) => {\n    if(window.confirm(`Delete ${p.name}?`)) {\n      contactsSrv.remove(p.id).then(() => {\n        console.log(`Removed ${p.name}`)\n        setPersons(persons.filter((e) => e.id !== p.id))})\n        .catch(() => {\n          setError(`${p.name} no longer exists on the server`)\n          setTimeout(() => setError(null), 5000)\n        })\n    \n    }\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    const i = persons.findIndex((p) => p.name === newName)\n    if(i !== -1) {\n      if (window.confirm(`${newName} already exists, do you want update the number?`)) {\n        const newObj = {name: newName, number: newNumber}\n        const pid = persons[i].id\n        contactsSrv.update(pid, newObj).then((response) => {\n          \n          setPersons(persons.filter((p) => p.id !== pid).concat(response))\n          \n          setMessage(`Updated ${newName} to ${newNumber}`)\n          setTimeout(() => setMessage(null), 5000)\n        }).catch((error) => {\n\n          if(error.response.status === 400) \n            setError(`Validation error: ${error.response.data.error}`)\n          else \n            setError(`${newName} no longer exists on the server`)\n\n          setTimeout(() => setError(null), 5000)\n        })\n      }\n\n    } else {\n      const newPersonObj = {name: newName, number: newNumber}\n      contactsSrv.create(newPersonObj).then((response) => {\n        setPersons(persons.concat(response))\n        setMessage(`Added ${newName}`)\n        setTimeout(() => setMessage(null), 5000)\n      })\n      .catch(error => {\n        setError(`Person addition error: ${error.response.data.error}`)\n        setTimeout(() => setError(null), 5000)\n      })\n    }\n  }\n\n  return (\n    <div>\n      <SuccessNotif message={message}/>\n      <ErrorNotif message={error}/>\n      <Search onChange={searchChangeHandler}/>\n      <Form onSubmit={addPerson} onNameChange={nameChangeHandler} onNumberChange={numberChangeHandler}/>\n      <People persons={persons} searchName={searchName} onDelete={deletePersonHandler}/>\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}